#!/bin/bash
set -e

arg0="${0##*/}"
dir0="${0%/*}"

# Defaults
os="debian:8"
rose_source="https://github.com/rose-compiler/rose-develop"
spock_download_dir="$HOME/.spock/downloads"

# Parse command-line
while [ "$#" -gt 0 ]; do
    case "$1" in
	--)
	    shift
	    break
	    ;;

	--os=*)
	    os="${1#--os=}"
	    shift
	    ;;
	--os)
	    os="$2"
	    shift 2
	    ;;

	--rose=*)
	    rose_source="${1#--rose=}"
	    shift
	    ;;
	--rose)
	    rose_source="$2"
	    shift 2
	    ;;

	--downloads=*)
	    spock_download_dir="${1#--downloads=}"
	    shift
	    ;;
	--downloads)
	    spock_download_dir="$2"
	    shift 2
	    ;;

	-*)
	    echo "$arg0: unrecognized command-line switch: $1" >&2
	    exit 1
	    ;;
	*)
	    echo "usage: $arg0 --os=BASE_OS" >&2
	    exit 1
    esac
done

########################################################################################################################
# Obtain ROSE source code and copy it to the destination directory.
obtain_rose_source_code() {
    local destination="$1"

    case "$rose_source" in
	http*|git*)
	    git clone --progress "$rose_source" "$destination"
	    ;;
	*)
	    edg_warning="WARNING: This image may contain EDG source code"
	    echo "$edg_warning" >&2 # and again later
	    rsync -a --exclude='_build*' "$rose_source"/ "$destination"
	    ;;
    esac
}
    
########################################################################################################################
# Given a docker instance name for an OS, return the OS upon which the instance is based.  This info is used to select
# the template for installing system software (e.g., Debian-based systems use apt-get and Fedora/RedHat systems use yum.
base_operating_system() {
    local os="$1"
    case "$os" in
	debian*|*/debian*|ubuntu*|*/ubuntu*|linux-mint|*/linux-mint*)
	    echo debian
	    ;;
	fedora*|*/fedora*)
	    echo fedora
	    ;;
	*)
	    echo "$arg0: unrecognized operating system: $os" >&2
	    exit 1
	    ;;
    esac
}

########################################################################################################################
# Create a docker image for basic ROSE development.  This image has all the prerequisites for building ROSE although
# it relies on RMC to install some of them in the container rather than the image.
build_devel_image() {
    local os="$1" output_tag="$2"
    os_base=$(base_operating_system "$os")

    # Prepare to create the docker image
    local tempdir=$(mktemp --directory --tmpdir "rose-XXXXXXXXXX")
    trap "rm -rf $tempdir" EXIT
    sed "s%\\\${os}%$os%g" <"$dir0/../templates/$os_base-devel" >"$tempdir/Dockerfile"
    cp "$dir0/../templates/docker-ignore" "$tempdir/.dockerignore"

    [ -d "$spock_download_dir" ] &&
	rsync -ai "$spock_download_dir"/ "$tempdir/spock-downloads"

    echo "about to run 'sudo docker build -t $output_tag .' in $tempdir..."
    (cd "$tempdir" && sudo docker build -t "$output_tag" .)
    rm -rf "$tempdir"
    trap - EXIT
}

########################################################################################################################
# Create a docker image suitable for running matrix tests.  This involves installing the matrix testing tools, which
# are in the $ROSE/projects/MatrixTesting directory. To that end, we start with a development image and extend it by
# downloading and compiling ROSE with no frontend languages.
build_matrix_image() {
    local devel_image_tag="$1" output_tag="$2"

    local tempdir=$(mktemp --directory --tmpdir "rose-XXXXXXXXXX")
    trap "rm -rf $tempdir" EXIT
    sed "s%\\\${base_image}%$devel_image_tag%g" <"$dir0/../templates/matrix-testing" >"$tempdir/Dockerfile"
    cp "$dir0/../templates/docker-ignore" "$tempdir/.dockerignore"

    obtain_rose_source_code "$tempdir/rose" || exit 1

    echo "about to run 'sudo docker build -t $output_tag .' in $tempdir..."
    (cd "$tempdir" && sudo docker build -t "$output_tag" .)

    rm -rf "$tempdir"
    trap - EXIT
}
    
########################################################################################################################

devel_image_tag="$(echo "$os" |tr [:/] __)-rose-devel"
build_devel_image "$os" "$devel_image_tag"
echo "to run this image in a container, say: sudo docker run -it $devel_image_tag"

matrix_image_tag="$(echo "$os" |tr [:/] __)-rose-matrix"
build_matrix_image "$devel_image_tag" "$matrix_image_tag"
echo "to run this image in a container, say: sudo docker run -it $matrix_image_tag"
echo "$edg_warning" >&2
