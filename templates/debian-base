# Docker image creation -*- shell-script -*-
#
# This file describes a docker image suitable for doing ROSE development. It contains all prerequisites needed
# by ROSE except for thos managed by Spock.  It does not contain ROSE source code.
#
# I am using lower-case Docker instructions in this file contrary to docker conventions. Upper-case to accent
# the docker-specific words is silly since all lines in this file must be docker instructions.


########################################################################################################################
# Operating system.
########################################################################################################################

#Debian, Ubuntu, and Mint should all work equally well.
#from debian:jessie
#from vcatechnology/linux-mint
#from ubuntu:16.04
from ${os}

########################################################################################################################
# Basic prerequisites
########################################################################################################################

# These are the prerequisites for the ROSE Meta Config (RMC) system. They're cut-n-pasted from the ROSE installation
# instructions at doxygen.rosecompiler.org except I've added "-y".  Since we'll be using RMC, we don't need to install
# everything. In particular, we don't install those things that RMC itself installs, which basically boils down to
# any package whose binary interface (ABI) is used by ROSE and depends directly or indirectly on a C++ compiler.

run apt-get -y update
run apt-get -y install git
run apt-get -y install wget
run apt-get -y install build-essential g++ gfortran
run apt-get -y install libtool automake
run apt-get -y install flex bison
run apt-get -y install graphviz-dev
run apt-get -y install cmake
run apt-get -y install libpqxx-dev

# "ps2pdf" is an undocumented ROSE dependency (see JIRA issue ROSE-774, 2017-02-20)
run apt-get -y install ghostscript

# Perldoc and groff are needed to display man pages from ROSE command --help
run apt-get -y install perl-doc groff

# Optional things used by binary analysis
run apt-get -y install libgcrypt20-dev binwalk libfcgi-dev

# Dependencies for build systems
run apt-get -y install libfuse-dev

########################################################################################################################
# Create user and groups
########################################################################################################################

# Create a user so we don't have to run things as the admin.
run apt-get -y install sudo && useradd -c "ROSE Developer" -d /home/rose -m -G sudo -s /bin/bash rose
run (echo rose; echo rose) |passwd rose
run echo "rose ALL = NOPASSWD: ALL" >>/etc/sudoers

########################################################################################################################
# Install RMC
########################################################################################################################

# Insert RMC downloads. This step is optional
add spock-downloads /home/rose/.spock/var/downloads
run chown -R rose:rose /home/rose/.spock

# Override spock's use of hostname as part of the $SPOCK_OPTDIR directory because it changes from container to container.
# Although docker allows setting the hostname when a container runs, I don't see a way to set the hostname when the
# image is being built. We'll make the value permanent when we install the DeveloperScripts, below.
run sudo --login -u rose bash -c			\
    'export SPOCK_HOSTNAME=container;			\
     git clone https://github.com/matzke1/rmc-spock &&	\
     cd rmc-spock &&					\
     ./scripts/bootstrap.sh'

run sudo --login -u rose bash -c \
    "rm -rf rmc-spock"

########################################################################################################################
# Optional things to make the development environment better.
########################################################################################################################

# Install Robb's development environment. These are various commands (like "mkcd" short for "mkdir" followed by "cd"),
# a more informative bash prompt including a bell when a long-running command completes, config files for Emacs, etc.
run sudo --login -u rose bash -c					\
    'git clone https://github.com/matzke1/DeveloperScripts &&		\
     cd DeveloperScripts &&						\
     echo "export SPOCK_HOSTNAME=container" >>bash/environment &&	\
     bash ./install.sh </dev/null'

# Install a real editor besides the toy "nano". Debian has additional real editors and IDEs, but "vim" is small.
run apt-get -y install vim

# Aptitude is easier to use than apt-get, especially for users new to Debian package management.
run apt-get -y install aptitude

# ROSE developers use sshfs to net-mount source trees
run apt-get -y install sshfs

# And it would be nice if the SSH server were available in the docker container.
run apt-get -y install openssh-server

########################################################################################################################
# When running the container, log in as "rose" by default.
########################################################################################################################

cmd /etc/init.d/ssh start && \
    (ip addr show dev eth0 |sed -n '/inet / s/[^0-9]*\(\([0-9]\+\.\)\{3\}[0-9]\+\).*/\1/p') && \
    sudo --login -u rose
